name: Deploy to Google Cloud

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.5']

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: |
          go get github.com/mailjet/mailjet-apiv3-go
          go get github.com/go-redis/redis/v8
          go get cloud.google.com/go/secretmanager/apiv1
          go get google.golang.org/genproto/googleapis/cloud/secretmanager/v1
      - name: Build
        run: |
          go mod vendor
          go build -v ./...
      - name: Test with the Go CLI
        run: go test      

  deploy:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    needs: build
    if: success()

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        project_id: ${{ secrets.GCP_PROJECT }}
        workload_identity_provider: ${{ secrets.WORKLOAD_IDP }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_ID }}
        create_credentials_file: true
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: SSH into GCE instance and run commands
      run: |
        gcloud compute ssh --zone "us-central1-a" "${{secrets.GCE_USER}}@mygcloudinst" --project '${{secrets.GCP_PROJECT_NAME}}' --command 'sudo apt-get update;
        sudo apt-get install -y git;
        wget https://golang.org/dl/go1.21.6.linux-amd64.tar.gz;
        sudo tar -C /usr/local -xzf go1.21.6.linux-amd64.tar.gz;
        export PATH=$PATH:/usr/local/go/bin;
        touch ~/startup-script.sh;
        export DB_URL=${{ secrets.DB_URL }};
        export DB_PORT=${{ secrets.DB_PORT }};
        export SERVER_PORT=${{ secrets.SERVER_PORT }};
        export MAIL_SERVER_API_KEY=${{ secrets.MAIL_SERVER_API_KEY }};
        export MAIL_SERVER_API_SECRET=${{ secrets.MAIL_SERVER_API_SECRET }};
        export FROM_EMAIL=${{ secrets.FROM_EMAIL }};
        export REDIS_URI=${{ secrets.REDIS_URI }};
        source ~/bashrc;
        rm -rf ~/effective-umbrella;
        git clone https://github.com/canatac/effective-umbrella.git;
        cd ~/effective-umbrella;
        go get github.com/mailjet/mailjet-apiv3-go;
        go get github.com/go-redis/redis/v8;
        go get cloud.google.com/go/secretmanager/apiv1;
        go get google.golang.org/genproto/googleapis/cloud/secretmanager/v1;
        go mod tidy;
        go run main.go;' -- -t